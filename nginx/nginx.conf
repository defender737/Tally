upstream frontend {
    server frontend:3000;
}

upstream backend {
    server backend:8080;
}

server {
    listen 80;
    server_name www.mytally.site;

     location /.well-known/acme-challenge/ {
         root /var/www/certbot;
     }

    return 301 https://mytally.site$request_uri;
}

server {
    listen 80;
    server_name mytally.site;

    # Certbot 인증 경로 허용
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    # 이외 경로 전부 https로 리다이렉트
    location / {
        return 301 https://mytally.site$request_uri;
    }
}

server{
    listen 443 ssl;
    server_name www.mytally.site;

    # SSL 인증서 경로
    ssl_certificate     /etc/letsencrypt/live/mytally.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mytally.site/privkey.pem;

    return 301 https://mytally.site$request_uri;
}

server {
    listen 443 ssl;
    server_name mytally.site;

    # SSL 인증서 경로
    ssl_certificate     /etc/letsencrypt/live/mytally.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mytally.site/privkey.pem;

#     root /usr/share/nginx/html;
#     index index.html;

    # 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;


    # React SPA 경로 처리
    location / {
                proxy_pass http://frontend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
    }

    # 백엔드 API 프록시
    location /api/ {
        client_max_body_size 20M;
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}